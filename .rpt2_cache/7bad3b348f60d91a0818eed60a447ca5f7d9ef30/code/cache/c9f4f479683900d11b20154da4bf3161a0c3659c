{"code":"import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nvar withFirebaseAuth = function (firebaseApp) {\r\n    return function (WrappedComponent) {\r\n        return /** @class */ (function (_super) {\r\n            tslib_1.__extends(FirebaseAuthProvider, _super);\r\n            function FirebaseAuthProvider() {\r\n                var _this = _super !== null && _super.apply(this, arguments) || this;\r\n                _this.state = {\r\n                    user: null,\r\n                    error: null,\r\n                };\r\n                _this.tryTo = function (operation) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n                    var error_1;\r\n                    return tslib_1.__generator(this, function (_a) {\r\n                        switch (_a.label) {\r\n                            case 0:\r\n                                _a.trys.push([0, 2, , 3]);\r\n                                return [4 /*yield*/, operation()];\r\n                            case 1:\r\n                                _a.sent();\r\n                                return [3 /*break*/, 3];\r\n                            case 2:\r\n                                error_1 = _a.sent();\r\n                                this.setState({ error: error_1 });\r\n                                return [3 /*break*/, 3];\r\n                            case 3: return [2 /*return*/];\r\n                        }\r\n                    });\r\n                }); };\r\n                _this.clearError = function () { return _this.setState({ error: null }); };\r\n                _this.createUserWithEmailAndPassword = function (email, password) {\r\n                    _this.tryTo(function () { return firebaseApp.auth().createUserWithEmailAndPassword(email, password); });\r\n                };\r\n                _this.signInWithEmailAndPassword = function (email, password) {\r\n                    _this.tryTo(function () { return firebaseApp.auth().signInWithEmailAndPassword(email, password); });\r\n                };\r\n                _this.signOut = function () {\r\n                    _this.tryTo(function () { return firebaseApp.auth().signOut(); });\r\n                };\r\n                _this.signInAnonymously = function () {\r\n                    _this.tryTo(function () { return firebaseApp.auth().signInAnonymously(); });\r\n                };\r\n                return _this;\r\n            }\r\n            FirebaseAuthProvider.prototype.componentDidMount = function () {\r\n                var _this = this;\r\n                firebaseApp.auth().onAuthStateChanged(function (user) {\r\n                    _this.setState({ user: user });\r\n                });\r\n            };\r\n            FirebaseAuthProvider.prototype.render = function () {\r\n                var props = {\r\n                    signInWithEmailAndPassword: this.signInWithEmailAndPassword,\r\n                    createUserWithEmailAndPassword: this.createUserWithEmailAndPassword,\r\n                    /** TODO: plz implement these methods, think about something for the providers, you can do it */\r\n                    signInWithGoogle: function () { },\r\n                    signInWithFacebook: function () { },\r\n                    signInWithGithub: function () { },\r\n                    signInWithTwitter: function () { },\r\n                    clearError: this.clearError,\r\n                    signInAnonymously: this.signInAnonymously,\r\n                    signOut: this.signOut,\r\n                    user: this.state.user,\r\n                    error: this.state.error,\r\n                };\r\n                return React.createElement(WrappedComponent, tslib_1.__assign({}, props));\r\n            };\r\n            return FirebaseAuthProvider;\r\n        }(React.PureComponent));\r\n    };\r\n};\r\nexport default withFirebaseAuth;\r\n//# sourceMappingURL=index.js.map","map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"src/index.tsx\"],\"names\":[],\"mappings\":\";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAiB/B,IAAM,gBAAgB,GAAG,UAAC,WAA6B;IACrD,OAAA,UAAC,gBAAkD;QACjD;YAA0C,gDAAmB;YAAtD;gBAAA,qEAwDN;gBAvDC,WAAK,GAAG;oBACN,IAAI,EAAE,IAAI;oBACV,KAAK,EAAE,IAAI;iBACZ,CAAA;gBAQD,WAAK,GAAG,UAAO,SAAqB;;;;;;gCAEhC,qBAAM,SAAS,EAAE,EAAA;;gCAAjB,SAAiB,CAAC;;;;gCAElB,IAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,SAAA,EAAE,CAAC,CAAC;;;;;qBAE5B,CAAA;gBAED,gBAAU,GAAG,cAAM,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,EAA9B,CAA8B,CAAC;gBAElD,oCAA8B,GAAG,UAAC,KAAa,EAAE,QAAgB;oBAC/D,KAAI,CAAC,KAAK,CAAC,cAAM,OAAA,WAAW,CAAC,IAAI,EAAE,CAAC,8BAA8B,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAlE,CAAkE,CAAC,CAAA;gBACtF,CAAC,CAAA;gBAED,gCAA0B,GAAG,UAAC,KAAa,EAAE,QAAgB;oBAC3D,KAAI,CAAC,KAAK,CAAC,cAAM,OAAA,WAAW,CAAC,IAAI,EAAE,CAAC,0BAA0B,CAAC,KAAK,EAAE,QAAQ,CAAC,EAA9D,CAA8D,CAAC,CAAA;gBAClF,CAAC,CAAA;gBAED,aAAO,GAAG;oBACR,KAAI,CAAC,KAAK,CAAC,cAAM,OAAA,WAAW,CAAC,IAAI,EAAE,CAAC,OAAO,EAAE,EAA5B,CAA4B,CAAC,CAAA;gBAChD,CAAC,CAAA;gBAED,uBAAiB,GAAG;oBAClB,KAAI,CAAC,KAAK,CAAC,cAAM,OAAA,WAAW,CAAC,IAAI,EAAE,CAAC,iBAAiB,EAAE,EAAtC,CAAsC,CAAC,CAAA;gBAC1D,CAAC,CAAA;;YAoBH,CAAC;YAlDC,gDAAiB,GAAjB;gBAAA,iBAIC;gBAHC,WAAW,CAAC,IAAI,EAAE,CAAC,kBAAkB,CAAC,UAAC,IAAmB;oBACxD,KAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC;gBAC1B,CAAC,CAAC,CAAC;YACL,CAAC;YA4BD,qCAAM,GAAN;gBACE,IAAM,KAAK,GAAG;oBACZ,0BAA0B,EAAE,IAAI,CAAC,0BAA0B;oBAC3D,8BAA8B,EAAE,IAAI,CAAC,8BAA8B;oBACnE,gGAAgG;oBAChG,gBAAgB,EAAE,cAAO,CAAC;oBAC1B,kBAAkB,EAAE,cAAO,CAAC;oBAC5B,gBAAgB,EAAE,cAAO,CAAC;oBAC1B,iBAAiB,EAAE,cAAO,CAAC;oBAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;oBACzC,OAAO,EAAE,IAAI,CAAC,OAAO;oBACrB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;oBACrB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;iBACxB,CAAC;gBAEF,OAAO,oBAAC,gBAAgB,uBAAK,KAAK,EAAI,CAAC;YACzC,CAAC;YACH,2BAAC;QAAD,CAAC,AAxDM,CAAmC,KAAK,CAAC,aAAa,GAwD5D;IACH,CAAC;AA1DD,CA0DC,CAAC;AAEJ,eAAe,gBAAgB,CAAC\"}","dts":{"name":"/home/armando/perry-js/react-firebase-hoc/react-firebase-hoc/index.d.ts","text":"import * as React from 'react';\r\nimport * as firebase from 'firebase';\r\nexport declare type WrappedComponentProps = {\r\n    signInWithEmailAndPassword: (email: string, password: string) => void;\r\n    createUserWithEmailAndPassword: (email: string, password: string) => void;\r\n    signInWithGoogle: () => void;\r\n    signInWithFacebook: () => void;\r\n    signInWithGithub: () => void;\r\n    signInWithTwitter: () => void;\r\n    signInAnonymously: () => void;\r\n    signOut: () => void;\r\n    clearError: () => void;\r\n    user?: firebase.User | null;\r\n    error?: firebase.FirebaseError | null;\r\n};\r\ndeclare const withFirebaseAuth: (firebaseApp: firebase.app.App) => (WrappedComponent: React.StatelessComponent<WrappedComponentProps>) => {\r\n    new (props: Readonly<{}>): {\r\n        state: {\r\n            user: null;\r\n            error: null;\r\n        };\r\n        componentDidMount(): void;\r\n        tryTo: (operation: () => void) => Promise<void>;\r\n        clearError: () => void;\r\n        createUserWithEmailAndPassword: (email: string, password: string) => void;\r\n        signInWithEmailAndPassword: (email: string, password: string) => void;\r\n        signOut: () => void;\r\n        signInAnonymously: () => void;\r\n        render(): JSX.Element;\r\n        setState<K extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<{}>) => {} | Pick<{}, K> | null) | Pick<{}, K> | null, callback?: (() => void) | undefined): void;\r\n        forceUpdate(callBack?: (() => void) | undefined): void;\r\n        readonly props: Readonly<{\r\n            children?: React.ReactNode;\r\n        }> & Readonly<{}>;\r\n        context: any;\r\n        refs: {\r\n            [key: string]: React.ReactInstance;\r\n        };\r\n    };\r\n    new (props: {}, context?: any): {\r\n        state: {\r\n            user: null;\r\n            error: null;\r\n        };\r\n        componentDidMount(): void;\r\n        tryTo: (operation: () => void) => Promise<void>;\r\n        clearError: () => void;\r\n        createUserWithEmailAndPassword: (email: string, password: string) => void;\r\n        signInWithEmailAndPassword: (email: string, password: string) => void;\r\n        signOut: () => void;\r\n        signInAnonymously: () => void;\r\n        render(): JSX.Element;\r\n        setState<K extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<{}>) => {} | Pick<{}, K> | null) | Pick<{}, K> | null, callback?: (() => void) | undefined): void;\r\n        forceUpdate(callBack?: (() => void) | undefined): void;\r\n        readonly props: Readonly<{\r\n            children?: React.ReactNode;\r\n        }> & Readonly<{}>;\r\n        context: any;\r\n        refs: {\r\n            [key: string]: React.ReactInstance;\r\n        };\r\n    };\r\n};\r\nexport default withFirebaseAuth;\r\n"}}
